project: werfio-ng
configVersion: 1

---
artifact: asset
from: jekyll/builder:3
ansible:
  install:
  - shell: |
      export PATH=/usr/jekyll/bin/:$PATH
      gem update bundler
  - name: "Install Dependencies"
    shell: bundle install
    args:
      executable: /bin/bash
      chdir: /app/docs
  beforeSetup:
  - file:
      path: "{{`{{ item }}`}}"
      state: directory
      mode: 0777
    with_items:
    - /app/_site/main/
    - /app/_site/ru/
  - name: "Install common head.html (which use ssi)"
    shell: cp -f head-common.html head.html
    args:
      executable: /bin/bash
      chdir: /app/docs/_includes
  - shell: |
      JEKYLL_ENV=production jekyll build -s /app/docs  -d /app/_site/main/ --config /app/docs/_config.yml
      JEKYLL_ENV=production jekyll build -s /app/docs  -d /app/_site/ru/ --config /app/docs/_config.yml,/app/docs/_config_ru.yml
    args:
      executable: /bin/bash
      chdir: /app/docs
git:
- add: /docs
  to: /app/docs
  owner: jekyll
  group: jekyll
  excludePaths:
  - '**/*.sh'
  - .helm
  stageDependencies:
    install: ['Gemfile','Gemfile.lock']
    beforeSetup: '**/*'
---
image: web
from: nginx:stable-alpine
ansible:
  setup:
  - name: "Setup /etc/nginx/nginx.conf"
    copy:
      content: |
{{ .Files.Get ".werf/nginx.conf" | indent 8 }}
      dest: /etc/nginx/nginx.conf
  - copy:
      content: |
{{ .Files.Get ".werf/robots.txt" | indent 8 }}
      dest: /app/main/robots.txt
  - copy:
      content: |
{{ .Files.Get ".werf/robots_ru.txt" | indent 8 }}
      dest: /app/ru/robots.txt
import:
- artifact: asset
  add: /app/_site
  to: /app/
  before: setup
---
artifact: web-backend-artifact
from: golang:1.15
ansible:
  install:
    - name: Build apis
      shell: |
        go get -d -v ./
        go build -v -o /go/src/app/server /go/src/app/main.go
      args:
        executable: /bin/bash
        chdir: /go/src/app
git:
  - add: /docs/backend
    to: /go/src/app
    stageDependencies:
      install: '**/*'
---
image: web-backend
from: ubuntu:20.04
ansible:
  install:
    - apt:
        name: ['git','curl', 'jq']
        state: present
        update_cache: yes
import:
  - artifact: web-backend-artifact
    add: /go/src/app/server
    to: /app/server
    before: setup
  - artifact: asset
    add: /app/_site
    to: /app/root
    before: setup
    excludePaths:
      - "**/documentation/"


